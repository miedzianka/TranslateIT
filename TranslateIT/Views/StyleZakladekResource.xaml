<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="LabelStandardowy" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="3"/>
    </Style>
    <Style x:Key="CustomErrorControlOnErrorStyle" TargetType="TextBox">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <TextBlock FontSize="11" FontStyle="Italic" Foreground="Red"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabelError" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="Red"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="LightGray"/>
    </Style>
    <Style x:Key="ButtonStandardowy" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="CheckBoxStandardowy" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="CheckBoxBogaty" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxStandardowy}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxStandardowy" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3"/>
    </Style>
    <Style x:Key="ComboBoxStandardowy" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="3"/>
    </Style>
    <Style x:Key="DatePickerStandardowy" TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="0,8,0,8"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>
    <Style x:Key="GroupBoxStandardowy" TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="8" />
    </Style>
    <Style x:Key="DataGridStandardowy" TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="AutoGenerateColumns" Value="False" />
    </Style>
    <Style x:Key="BorderStandardowy" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Padding" Value="4" />
    </Style>
    <Style x:Key="BaseDatePicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="2 2 2 2"/>
    </Style>

    <Style x:Key="BlueDatePicker" BasedOn="{StaticResource BaseDatePicker}" TargetType="{x:Type DatePicker}" >
        <Setter Property="Foreground" Value="LightBlue"/>
    </Style>

    <Style x:Key="BaseExpander" TargetType="{x:Type Expander}">
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground" Value="Blue"/>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="110"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="LightGray"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Foreground"  Value="Azure"/>
        <Setter Property="Margin" Value="100"/>
    </Style>

    <Style x:Key="TextBase" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Arial"/>
    </Style>

    <Style x:Key="BaseLabel" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Comic Sans MS Italic"/>
    </Style>

    <Style x:Key="BaseBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>
    <Style TargetType="ToggleButton">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="2" />
    </Style>
</ResourceDictionary>